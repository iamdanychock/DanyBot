
@client.event
async def on_raw_reaction_add(payload):
    message_id = payload.message_id
    if message_id == 649274572033490955:
        guild_id = payload.guild_id
        guild = discord.utils.find(lambda g : g.id == guild_id, client.guilds)

        if payload.emoji.name == "crown":
            role = discord.utils.get(guild.roles, name="King")
        elif payload.emoji.name == "ok_hand":
            role = discord.utils.get(guilds, name="Sous-King")
        else:
            role = discord.utils.get(guild.roles, name=payload.emoji.name)

        if role is not None:
            member = discord.utils.find(lambda m : m.id == payload.user_id, guilds.members)
            if member is not None:
                await member.add_roles(role)
                print("done")
            else:
                print("Member not found.")
        else:
            print("Role not found.")


@client.event
async def on_raw_reaction_remove(payload):
    message_id = payload.message_id
    if message_id == 649274572033490955:
        guild_id = payload.guild_id
        guild = discord.utils.find(lambda g : g.id == guild_id, client.guilds)

        if payload.emoji.name == "crown":
            role = discord.utils.get(guild.roles, name="King")
        elif payload.emoji.name == "ok_hand":
            role = discord.utils.get(guilds, name="Sous-King")
        else:
            role = discord.utils.get(guild.roles, name=payload.emoji.name)

        if role is not None:
            member = discord.utils.find(lambda m : m.id == payload.user_id, guilds.members)
            if member is not None:
                await member.add_roles(role)
                print("done")
            else:
                print("Member not found.")
        else:
            print("Role not found.")